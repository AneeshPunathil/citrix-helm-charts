{{- if eq .Values.citrixCPX true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-egressgateway
  namespace: {{.Release.Namespace}}
  labels:
    app: {{default "citrix-egressgateway" .Values.egressGateway.label}}
spec:
  replicas: 1
  selector:
    matchLabels:
        app: {{default "citrix-egressgateway" .Values.egressGateway.label}}
  template:
    metadata:
      labels:
        app: {{default "citrix-egressgateway" .Values.egressGateway.label}}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      volumes:
      - name: nsloginegress
        secret:
          secretName: nsloginegress
      - name: citrix-egressgateway-certs
        secret:
          optional: true
          secretName: citrix-egressgateway-certs
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and egress-gateway       
      - name: cpx-pwd          
        emptyDir: {}
      - name: certs
        emptyDir: {}
      - name: istiod-ca-cert
        configMap:
          defaultMode: 0777
          name: istio-ca-root-cert         
      containers:
{{- if eq .Values.metricExporter.required true }}
        - name: exporter
          image: {{ .Values.metricExporter.image }}:{{ .Values.metricExporter.version }}
          imagePullPolicy: IfNotPresent
          args:
          - "--target-nsip=127.0.0.1"
          - "--port={{ .Values.metricExporter.port }}"
          - "--log-level={{ .Values.metricExporter.logLevel }}"
          - "--secure=false"
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
          - name: nsloginegress
            mountPath: "/mnt/nslogin"
            readOnly: true
{{- end }}
        - name: xds-adaptor
          image: {{.Values.xDSAdaptor.image}}:{{.Values.xDSAdaptor.tag}}
          imagePullPolicy: {{.Values.xDSAdaptor.imagePullPolicy}}
          args:
          - -ads-server
{{- if eq .Values.xDSAdaptor.secureConnect true }}
          - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.secureGrpcPort }}
{{- else }}
          - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.insecureGrpcPort }}
{{- end }}
          - -istio-proxy-type
          - {{ .Values.xDSAdaptor.proxyType | default "router" | quote }}
{{- if .Values.istioPilot.SAN }}
          - -ads-server-SAN
          - {{ .Values.istioPilot.SAN | default "" }}
{{- end }}
          - -ads-secure-connect={{ .Values.xDSAdaptor.secureConnect | default true}}
          - -citrix-adc
          - "http://localhost:80"
          - -citrix-adc-vip
          - "nsip"
          - -citrix-adc-password
          - "/var/deviceinfo/random_id"
{{- if .Values.ADMSettings.ADMIP }}
          - -citrix-adm
          - {{ .Values.ADMSettings.ADMIP }}            
{{- end }}
{{- if .Values.ADMSettings.licenseServerIP }}
          - -citrix-license-server
          - {{ .Values.ADMSettings.licenseServerIP }}
{{- end }}
{{- if .Values.coe.coeURL }}
          - -coe
          - {{ .Values.coe.coeURL }}
{{- end }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
               fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: APPLICATION_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: SERVICE_ACCOUNT
            valueFrom:            
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
{{- if .Values.certProvider.caAddr }}
          - name: CA_ADDR
            value: {{ .Values.certProvider.caAddr }}:{{ .Values.certProvider.caPort}} #istiod.istio-system.svc:15012
          - name: TRUST_DOMAIN
            value: {{ .Values.certProvider.trustDomain }} #cluster.local
          - name: CLUSTER_ID 
            value: {{ .Values.certProvider.clusterId }} #Kubernetes
          - name: CERT_TTL_IN_HOURS 
            value: {{ .Values.certProvider.certTTLinHours | quote }}
{{- end }}
          - name: NS_USER
            valueFrom:
              secretKeyRef:
                name: nsloginegress
                key: username
          - name: NS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nsloginegress
                key: password
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 32024 # UID of xds-adaptor container's user
          volumeMounts:
          - mountPath: /var/deviceinfo
            name: cpx-pwd
          - mountPath: /etc/certs/
            name: certs
          - mountPath: /etc/istio/egress-certs
            name: citrix-egressgateway-certs
            readOnly: true
          - name: istiod-ca-cert
            mountPath: /etc/rootcert/
          - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls     section for MUTUAL TLS
            name: citrix-ingressgateway-ca-certs
            readOnly: true            
        - name: citrix-egressgateway
          image: {{ .Values.egressGateway.image }}:{{ .Values.egressGateway.tag }}
          imagePullPolicy: {{ .Values.egressGateway.imagePullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /var/deviceinfo
            name: cpx-pwd
          - mountPath: /etc/certs/
            name: certs
          - mountPath: /etc/istio/egress-certs
            name: citrix-egressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
            name: citrix-ingressgateway-ca-certs
            readOnly: true            
          ports:
            - containerPort: 80
            - containerPort: 443
{{- if .Values.egressGateway.mgmtHttpPort }}
            - containerPort: {{ .Values.egressGateway.mgmtHttpPort }}
{{- end }}
{{- if .Values.egressGateway.mgmtHttpsPort }}
            - containerPort: {{ .Values.egressGateway.mgmtHttpsPort }}
{{- end }}
          env:
          - name: "EULA"
            value: "{{ .Values.egressGateway.EULA }}"
          - name: "MGMT_HTTP_PORT"
            value: "{{ .Values.egressGateway.mgmtHttpPort }}"
          - name: "MGMT_HTTPS_PORT"
            value: "{{ .Values.egressGateway.mgmtHttpsPort }}"
          - name: "NS_CPX_LITE"
            value: "{{ .Values.egressGateway.lightWeightCPX }}"            
{{- if or .Values.coe.coeURL .Values.ADMSettings.ADMIP }}
          - name: "NS_ENABLE_NEWNSLOG"
            value: "1"
{{- end }}
          - name: "KUBERNETES_TASK_ID"
            value: ""
          - name: "LS_IP"
            value: {{ .Values.ADMSettings.licenseServerIP | default "" }}
{{- if .Values.ADMSettings.ADMFingerPrint }}
          - name: "NS_MGMT_SERVER"
            value: {{ .Values.ADMSettings.ADMIP }}
          - name: "NS_MGMT_FINGER_PRINT"
            value: {{ .Values.ADMSettings.ADMFingerPrint | quote }}
          - name: "NS_HTTP_PORT"
            value: {{ .Values.egressGateway.mgmtHttpPort | quote }}
          - name: "NS_HTTPS_PORT"
            value: {{ .Values.egressGateway.mgmtHttpsPort | quote }}
{{- end }}
          - name: "LOGSTREAM_COLLECTOR_IP"
            value: {{ .Values.ADMSettings.ADMIP | default ""}}
            #To povision bandwidth based licensing to Citrix ADC CPX from ADM, needs bandwidth
{{- if and ( .Values.ADMSettings.licenseServerIP ) (eq .Values.ADMSettings.bandWidthLicense true) }}
          - name: "BANDWIDTH"
            value: {{ required "Mention bandwidth for bandwidth based licensing" .Values.ADMSettings.bandWidth | quote }}
{{- end }}
#for multiple-PE support, need to set CPX_CORES
{{- if .Values.ADMSettings.licenseServerIP }}
{{- if or (eq .Values.ADMSettings.vCPULicense true) (eq .Values.ADMSettings.bandWidthLicense true) }}
          - name: "CPX_CORES"
            value: {{ .Values.ADMSettings.cpxCores | default 1 | quote }}
{{- end }}
{{- end }}
{{- if or (.Values.ADMSettings.ADMIP) (.Values.ADMSettings.licenseServerIP) }}
          - name: NS_MGMT_USER
            valueFrom:
              secretKeyRef:
                name: admloginegress
                key: username
          - name: NS_MGMT_PASS
            valueFrom:
              secretKeyRef:
                name: admloginegress
                key: password
{{- end }} 
{{- end }}
